plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'idea'
	id 'eclipse'
	id "org.sonarqube" version "3.3"
}


sonarqube {
  properties {
    property "sonar.projectKey", "cristianelopez_unq-devapp"
    property "sonar.organization", "cristianelopez"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

eclipseJdt {
	doLast {
		ant.propertyfile(file: ".settings/org.eclipse.core.resources.prefs") {
			ant.entry(key: "eclipse.preferences.version", value: "1")
			ant.entry(key: "encoding/<project>", value: "utf-8")
		}
	}
}

compileJava.options.encoding = 'utf-8'
compileTestJava.options.encoding = 'utf-8'


group = 'ar.edu.unq.desapp.grupoXXX '
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenLocal()
    jcenter()
	mavenCentral()
}

dependencies {
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
 	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.postgresql:postgresql:42.2.12'
	runtimeOnly 'com.h2database:h2'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'

}

test {
	useJUnitPlatform()
}
